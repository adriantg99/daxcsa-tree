/* Improved Tree Structure */
.tree {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    padding: 0;
    width: 100%;
    overflow: visible;
}

.tree ul {
    display: flex;
    justify-content: center;
    padding-top: 30px;
    position: relative;
    transition: all 0.3s ease;
    list-style: none;
    margin: 0;
    width: 100%;
    min-height: 60px;
}

.tree li {
    position: relative;
    text-align: center;
    padding: 30px 10px 0 10px;
    margin: 0 5px;
    float: left;
}

/* Guaranteed Horizontal Connectors */
.tree li::before, .tree li::after {
    content: '';
    position: absolute;
    top: 0;
    width: 50%;
    height: 30px;
    border-top: 2px solid #3498db;
    box-sizing: border-box;
    z-index: 1;
}

.tree li::before {
    right: 50%;
    border-right: 2px solid #3498db;
    border-radius: 0 30px 0 0;
}

.tree li::after {
    left: 50%;
    border-left: 2px solid #3498db;
    border-radius: 30px 0 0 0;
}

/* Robust Vertical Connectors */
.vertical-connector {
    position: absolute;
    top: -30px;
    left: 50%;
    height: 30px;
    width: 2px;
    background: #3498db;
    transform: translateX(-50%);
    z-index: 1;
}

/* Connection points to prevent floating lines */
.connection-point {
    position: absolute;
    top: -30px;
    left: 50%;
    width: 8px;
    height: 8px;
    background: #3498db;
    border-radius: 50%;
    transform: translateX(-50%);
    z-index: 2;
}

/* Special cases for first/last child */
.tree li:first-child::before {
    border: none;
    width: calc(50% + 1px);
}
/* Adjustments for nodes without visible children */
.tree li.no-children::before,
.tree li.no-children::after {
    display: none;
}

/* First and last child adjustments */
.tree li:first-child::before,
.tree li:last-child::after {
    border: none;
    width: calc(50% + 1px);
}

/* Single child adjustments */
.tree li:only-child::after, 
.tree li:only-child::before {
    border-right: 2px solid #3498db;
    right: 50%;
    width: 50%;
    border-top: none;
}

/* Node styling */
.node {
    display: inline-block;
    padding: 10px 15px;
    border: 2px solid #3498db;
    background-color: #D0E9FF;
    border-radius: 8px;
    cursor: pointer;
    min-width: 160px;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
    transition: all 0.2s ease;
    position: relative;
    margin-bottom: 20px;
    position: relative; /* Necesario para posicionar el hover-info */

}

.hover-info {
    position: absolute;
    bottom: calc(100% + 10px);
    left: 50%;
    transform: translateX(-50%);
    width: 280px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    padding: 15px;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    pointer-events: none;
}

.hover-info-content h4 {
    margin-top: 0;
    color: #2c3e50;
    border-bottom: 1px solid #eee;
    padding-bottom: 8px;
}

.hover-info-content p {
    margin: 6px 0;
    font-size: 14px;
    line-height: 1.4;
}

.node:hover .hover-info {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-5px);
}


.tree li:only-child::after {
    display: none;
}

.node:hover {
    background-color: #B0D8FF;
    transform: scale(1.05);
}

.node-content {
    text-align: center;
    position: relative;
    z-index: 10;
}

.node-status {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #3498db;
    color: white;
    border-radius: 12px;
    padding: 2px 8px;
    font-size: 0.7em;
    font-weight: bold;
    z-index: 20;
}

/* Controls styling */
.tree-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}

.tree-search {
    padding: 8px 12px;
    border: 2px solid #3498db;
    border-radius: 6px;
    min-width: 250px;
}

.tree-btn {
    padding: 8px 16px;
    background: #3498db;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background 0.3s;
}

.tree-btn:hover {
    background: #2980b9;
}

/* Search results */
.search-results {
    position: absolute;
    background: white;
    border: 1px solid #ddd;
    border-radius: 6px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    max-height: 300px;
    overflow-y: auto;
    width: calc(100% - 30px);
    max-width: 400px;
    z-index: 100;
    display: none;
}

.search-result {
    padding: 10px;
    border-bottom: 1px solid #eee;
    cursor: pointer;
}

.search-result:hover {
    background: #f5f5f5;
}

/* Expand indicator */
.expand-indicator {
    font-size: 0.8em;
    color: #7f8c8d;
    padding: 5px;
    margin-top: 5px;
    cursor: pointer;
    background: #f0f0f0;
    border-radius: 4px;
    transition: all 0.3s;
}

.expand-indicator:hover {
    background: #3498db;
    color: white;
}

/* Status colors */
.node[data-status="Active"] {
    border-color: #2ecc71;
}

.node[data-status="Inactive"] {
    border-color: #e74c3c;
}

.node[data-status="Pending"] {
    border-color: #f39c12;
}

.node[data-status="Suspended"] {
    border-color: #95a5a6;
}

.tree > ul > li > .vertical-connector {
    display: none;
}

.level-1 > li > .vertical-connector {
    height: 40px;
    top: -40px;
}
/* Force connectors to remain visible */
.tree li::before,
.tree li::after,
.vertical-connector {
    opacity: 1 !important;
    display: block !important;
}

/* Responsive design */
/* Mobile-first responsive design */
@media (max-width: 768px) {
    .tree-controls {
        flex-direction: column;
        align-items: stretch;
        padding: 10px;
    }

    .hover-info {
        display: none !important;
    }
    
    .tree-search, .tree-btn {
        width: 100%;
        margin-bottom: 8px;
    }
    
    .tree {
        transform: scale(0.9);
        transform-origin: top center;
        width: 100%;
        overflow-x: auto;
        padding: 5px;
    }
    
    .tree ul {
        flex-wrap: wrap;
        justify-content: flex-start;
        padding-top: 15px;
    }
    
    .tree li {
        padding: 15px 3px 0 3px;
        margin: 0 1px;
        flex: 1 0 auto;
    }
    
    .node {
        min-width: 120px;
        padding: 8px 10px;
        font-size: 14px;
        margin-bottom: 15px;
    }
    
    .tree li::before, 
    .tree li::after {
        height: 15px;
    }
    
    .vertical-connector {
        height: 15px;
        top: -15px;
    }
    
    .connection-point {
        top: -15px;
        width: 6px;
        height: 6px;
    }
    
    /* Simplified tree structure for mobile */
    .tree ul {
        display: block;
        text-align: center;
    }
    
    .tree li {
        display: inline-block;
        float: none;
    }
    
    /* Stack children vertically on small screens */
    .tree li > ul {
        display: block;
        width: 100%;
    }
    
    /* Adjust connector lines for vertical stack */
    .tree li > ul > li::before,
    .tree li > ul > li::after {
        display: none;
    }
    
    .tree li > ul > li .vertical-connector {
        height: 20px;
        top: -20px;
    }
}

/* For very small screens */
@media (max-width: 480px) {
    .node {
        min-width: 100px;
        padding: 6px 8px;
        font-size: 12px;
    }
    
    .tree {
        transform: scale(0.8);
    }
    
    .tree li {
        padding-top: 10px;
    }
    
    /* Switch to vertical layout */
    .tree ul {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    
    .tree li {
        width: 100%;
        padding: 15px 0 0 0;
    }
    
    /* Adjust connectors for vertical layout */
    .tree li::before,
    .tree li::after {
        width: 2px;
        height: 15px;
        border-top: none;
        border-left: none;
        border-right: none;
        left: 50%;
    }
    
    .tree li::before {
        border-bottom: 2px solid #3498db;
        top: -15px;
        right: auto;
    }
    
    .tree li::after {
        display: none;
    }
    
    .vertical-connector {
        display: none;
    }
}

